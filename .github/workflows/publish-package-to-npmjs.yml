name: Generate and Publish SDK

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  NODE_VERSION: 18.x

jobs:
  install-and-cache:
    name: Run install and cache
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Cache node_modules
        id: cached-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}-${{ env.NODE_VERSION }}

      - name: Install dependencies
        if: steps.cached-node-modules.outputs.cache-hit != 'true'
        run: npm ci

  generate-sdk:
    runs-on: ubuntu-latest
    needs: [install-and-cache]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{env.NODE_VERSION}}
          registry-url: "https://registry.npmjs.org/"

      - name: Run docker-compose
        run: |
          cp CI/ESS/e2e/docker-compose.e2e.yaml docker-compose.yaml
          docker-compose pull
          docker-compose build --no-cache
          docker-compose up -d

      - name: Wait for Backend
        run: |
          npm install -g wait-on
          wait-on http://localhost:3000/api/v3/health --timeout 200000

      - name: Run the SDK generation script
        run: chmod +x ./scripts/generate-sdk-local.sh

      - name: Prepare SDK for publishing
        run: |
          cd sdk
          echo "{}" > package.json
          npm init -y
          jq '.name="your-sdk-name" | .version="0.0.1" | .main="index.js" | .author="Your Name" | .license="MIT" | .private=false' package.json > temp.json && mv temp.json package.json
        working-directory: ./sdk

      - name: Publish SDK to npm
        run: npm publish
        working-directory: ./sdk
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
